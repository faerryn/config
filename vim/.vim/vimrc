execute "augroup Personal"
autocmd!

" vim/neovim compat
if has("nvim")
    set shada=

    autocmd TextYankPost * lua vim.highlight.on_yank{timeout=500}

    set inccommand=nosplit
else
    set viminfo=

    " vim-highlightedyank
    let g:highlightedyank_highlight_duration = 500
    packadd vim-highlightedyank

    set term=xterm-256color
    let &t_SI = "\<Esc>[6 q"
    let &t_SR = "\<Esc>[4 q"
    let &t_EI = "\<Esc>[2 q"
    inoremap <Esc> <Esc>jk

    syntax on
    filetype plugin indent on

    set directory=~/.vim/swap//
    set undodir=~/.vim/undo/

    set autoindent
    set background=dark
    set backspace=indent,eol,start,nostop
    set hlsearch incsearch
    set wildmenu
endif

" core
set clipboard=unnamed,unnamedplus
set confirm
set hidden
set ignorecase smartcase
set lazyredraw
set mouse=ar
set nrformats=alpha,octal,hex,bin
set omnifunc=syntaxcomplete#Complete
set splitbelow splitright
set timeoutlen=500
set undofile
set updatetime=50

let g:mapleader="\<Space>"

noremap <silent> s        <Nop>
noremap <silent> S        <Nop>
noremap <silent> <Leader> <Nop>

nnoremap <silent> Y y$
noremap  <silent> Q @@

nnoremap <silent> <Leader>l :lopen<CR>
nnoremap <silent> <Leader>q :copen<CR>

autocmd FileType qf nnoremap <silent> <buffer> <esc> :q<CR>

silent! execute "mkspell! " . fnamemodify($MYVIMRC, ":h") . "/spell/*.add"
autocmd VimEnter * silent! helptags ALL

" aesthetics
set cursorline cursorcolumn colorcolumn=80
set laststatus=0 showtabline=0
set noruler
set nowrap linebreak
set number relativenumber signcolumn=number
set shortmess=o
set softtabstop=4 shiftwidth=4
set termguicolors

colorscheme gruvbox

let g:asmsyntax='nasm'

" vim-dirvish
let g:loaded_netrw       = 1
let g:loaded_netrwPlugin = 1
command! -nargs=? -complete=dir Explore Dirvish <args>
command! -nargs=? -complete=dir Sexplore belowright split | silent Dirvish <args>
command! -nargs=? -complete=dir Vexplore leftabove vsplit | silent Dirvish <args>

" vim-fugitive
autocmd FileType fugitive nnoremap <silent> <buffer> <Esc> :q<CR>
nnoremap <silent> <Leader>g :Git<CR>

" fzf
nnoremap <silent> <Leader>f :call fzf#run({"window": {"width": 0.8, "height": 0.6}, "source": "fd -Htf", "sink": "e"})<cr>
nnoremap <silent> <Leader>c :call fzf#run({"window": {"width": 0.8, "height": 0.6}, "source": "fd -Htd -d1", "sink": "cd"})<cr>
autocmd FileType fzf tnoremap <silent> <buffer> <Esc> <C-C>

" vim-sandwich
let g:sandwich_no_default_key_mappings = 1
let g:operator_sandwich_no_default_key_mappings = 1
let g:textobj_sandwich_no_default_key_mappings = 1
let g:sandwich#recipes = [
	    \ {'buns': ['(', ')'], 'nesting': 1, 'input': ['(', ')', 'b']},
	    \ {'buns': ['{', '}'], 'nesting': 1, 'skip_break': 1, 'input': ['{', '}', 'B']},
	    \ {'buns': ['[', ']'], 'nesting': 1, 'input': ['[', ']', 'r']},
	    \ {'buns': ['<', '>'], 'expand_range': 0},
	    \ {'buns': ['"', '"'], 'quoteescape': 1, 'expand_range': 0, 'nesting': 0, 'linewise': 0},
	    \ {'buns': ["'", "'"], 'quoteescape': 1, 'expand_range': 0, 'nesting': 0, 'linewise': 0},
	    \ {'buns': ["`", "`"], 'quoteescape': 1, 'expand_range': 0, 'nesting': 0, 'linewise': 0},
	    \ ]
nmap sa <Plug>(operator-sandwich-add)
xmap sa <Plug>(operator-sandwich-add)
nmap sd <Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)
nmap sr <Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)

" undotree
let g:undotree_WindowLayout = 4
let g:undotree_HelpLine = 0
nnoremap <silent> <Leader>u :UndotreeShow<CR>:UndotreeFocus<CR>
autocmd FileType undotree nnoremap <silent> <buffer> <Esc> :UndotreeHide<CR>

execute "augroup END"
